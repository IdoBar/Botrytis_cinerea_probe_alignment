# load custom functions from github
devtools::source_gist("7f63547158ecdbacf31b54a58af0d1cc", filename = "util.R")
# options(width = 180)
cran_packages <- c("tidyverse", "knitr", "pander", "captioner", "DT", "htmltab", "paletteer")
pacman::p_load(char=cran_packages, repos="https://cran.rstudio.com/")
figs <- captioner(prefix="Figure")
tbls <- captioner(prefix="Table")
tbls(name="samples","Botrytis isolates used for DNA sequencing.")
tbls(name="mapping_rates", "Mapping rates of the WGS reads to the Botrytis cinerea B05.10 reference genome.")
tbls(name="mapping_sum", "Mapping statistics.")
isolate_table <- readxl::read_excel("./sample_info/B_cinerea_extraction_for_WGS_24_07_2019_Qubit_measured.xlsx", sheet = "Original_nanodrop")
isolate_table
isolate_table <- readxl::read_excel("./sample_info/B_cinerea_extraction_for_WGS_24_07_2019_Qubit_measured.xlsx", sheet = "Original_nanodrop") %>%
.[c("Tube_ID", "Sample ID", "Sample name", "Species")
]
isolate_table <- readxl::read_excel("./sample_info/B_cinerea_extraction_for_WGS_24_07_2019_Qubit_measured.xlsx", sheet = "Original_nanodrop") %>%
.[c("Tube_ID", "Sample ID", "Sample name", "Species")]
isolate_table
View(isolate_table)
isolate_table <- readxl::read_excel("./sample_info/Botrytis_isolates_for_WGS_CAGRF20074.xlsx")
isolate_table <- readxl::read_excel("./sample_info/Botrytis_isolates_for_WGS_CAGRF20074.xlsx")
isolate_table <- readxl::read_excel("./sample_info/Botrytis_isolates_for_WGS_CAGRF20074.xlsx") %>%
set_names(., gsub("\\s+", "_", colnames(.)))
isolate_table
# sequencing_table <- readxl::read_excel("./sample_info/A_rabiei_isolate_list_for_wgs.xlsx", sheet = "submission_info")
sequencing_dict <- set_names(isolate_table$Sample_name, isolate_table$Tube_ID)
sequencing_dict
sequencing_dict[[5]]
# load custom functions from github
devtools::source_gist("7f63547158ecdbacf31b54a58af0d1cc", filename = "util.R")
# options(width = 180)
cran_packages <- c("tidyverse", "knitr", "pander", "captioner", "DT", "htmltab", "paletteer")
isolate_table <- readxl::read_excel("./sample_info/Botrytis_isolates_for_WGS_CAGRF20074.xlsx") %>%
set_names(., gsub("\\s+", "_", colnames(.)))
pacman::p_load(char=cran_packages, repos="https://cran.rstudio.com/")
isolate_table <- readxl::read_excel("./sample_info/Botrytis_isolates_for_WGS_CAGRF20074.xlsx") %>%
set_names(., gsub("\\s+", "_", colnames(.)))
# sequencing_table <- readxl::read_excel("./sample_info/A_rabiei_isolate_list_for_wgs.xlsx", sheet = "submission_info")
sequencing_dict <- set_names(isolate_table$Sample_name, isolate_table$Tube_ID)
# options(width = 180)
cran_packages <- c("tidyverse", "knitr", "pander","kableExtra", "captioner", "DT", "htmltab",
"paletteer")
pacman::p_load(char=cran_packages, repos="https://cran.rstudio.com/")
# datatable(as.data.frame(samples_table), caption=tbls("samples"))
kable(samples_table) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
# datatable(as.data.frame(samples_table), caption=tbls("samples"))
kable(isolate_table) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
# datatable(as.data.frame(samples_table), caption=tbls("samples"))
kable(isolate_table) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = F, position = "left") %>%
column_spec("Species", italic=TRUE) %>%
column_spec(1, bold = T)
# datatable(as.data.frame(samples_table), caption=tbls("samples"))
kable(isolate_table) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = F, position = "left") %>%
column_spec(4, italic=TRUE) %>%
column_spec(1, bold = T)
isolate_table <- readxl::read_excel("./sample_info/Botrytis_isolates_for_WGS_CAGRF20074.xlsx") %>%
set_names(., gsub("\\s+", "_", colnames(.))) %>% select(Sample_ID=Tuve_ID, Sample_name, Species)
isolate_table <- readxl::read_excel("./sample_info/Botrytis_isolates_for_WGS_CAGRF20074.xlsx") %>%
set_names(., gsub("\\s+", "_", colnames(.))) %>% select(Sample_ID=Tube_ID, Sample_name, Species)
isolate_table
# sequencing_table <- readxl::read_excel("./sample_info/A_rabiei_isolate_list_for_wgs.xlsx", sheet = "submission_info")
sequencing_dict <- set_names(isolate_table$Sample_name, isolate_table$Sample_ID)
# datatable(as.data.frame(samples_table), caption=tbls("samples"))
kable(isolate_table) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = F, position = "left") %>%
column_spec(3, italic=TRUE) %>%
column_spec(1, bold = T)
list.files("data", ".stats", full.names = TRUE)
list.files("data", ".stats", full.names = TRUE) %>% map_df(read_tsv)
mapping_table <- list.files("data", ".stats", full.names = TRUE) %>% map_df(read_tsv)
View(mapping_table)
mapping_table <- list.files("data", ".stats", full.names = TRUE) %>% map_df(read_tsv) %>%
rename(Sample_ID=sample_id) %>%
# mutate_at(vars(contains("mapp")),  ~as.numeric(sub("%", "", ., fixed=TRUE))/100) %>%
# mutate(Mapping_rate=rowMeans(.[,-1]), Mapping_tool = "Bowtie2 (v2.3.5)",
#        Sample_id=str_extract(.$sample_id, paste(sequencing_table$Submission_id, collapse = "|"))) %>%
# group_by(Sample_id, Mapping_tool) %>%
# summarise(Mapping_rate=mean(Mapping_rate)) %>% ungroup() %>%
arrange(Sample_ID) %>%  left_join(isolate_table)
mapping_table
mapping_table <- list.files("data", ".stats", full.names = TRUE) %>% map_df(read_tsv) %>%
rename(Sample_ID=sample_id) %>%
# mutate_at(vars(contains("mapp")),  ~as.numeric(sub("%", "", ., fixed=TRUE))/100) %>%
# mutate(Mapping_rate=rowMeans(.[,-1]), Mapping_tool = "Bowtie2 (v2.3.5)",
#        Sample_id=str_extract(.$sample_id, paste(sequencing_table$Submission_id, collapse = "|"))) %>%
# group_by(Sample_id, Mapping_tool) %>%
# summarise(Mapping_rate=mean(Mapping_rate)) %>% ungroup() %>%
arrange(Sample_ID) %>%  left_join(isolate_table, .)
mapping_table
mapping_table <- list.files("data", ".stats", full.names = TRUE) %>% map_df(read_tsv) %>%
rename(Sample_ID=sample_id) %>%
# mutate_at(vars(contains("mapp")),  ~as.numeric(sub("%", "", ., fixed=TRUE))/100) %>%
mutate(Mapping_rate=as.numeric(sub("%", "", mapping_rate, fixed=TRUE))/100,
Mapping_tool = "Bowtie2 (v2.3.5)") %>%
#        Sample_id=str_extract(.$sample_id, paste(sequencing_table$Submission_id, collapse = "|"))) %>%
# group_by(Sample_id, Mapping_tool) %>%
# summarise(Mapping_rate=mean(Mapping_rate)) %>% ungroup() %>%
arrange(Sample_ID) %>%  left_join(isolate_table, .) #%>%
mapping_table
mapping_table <- list.files("data", ".stats", full.names = TRUE) %>% map_df(read_tsv) %>%
rename(Sample_ID=sample_id) %>%
# mutate_at(vars(contains("mapp")),  ~as.numeric(sub("%", "", ., fixed=TRUE))/100) %>%
mutate(Mapping_rate=as.numeric(sub("%", "", mapping_rate, fixed=TRUE))/100,
Mapping_tool = "Bowtie2 (v2.3.5)") %>%
#        Sample_id=str_extract(.$sample_id, paste(sequencing_table$Submission_id, collapse = "|"))) %>%
# group_by(Sample_id, Mapping_tool) %>%
# summarise(Mapping_rate=mean(Mapping_rate)) %>% ungroup() %>%
arrange(Sample_ID) %>%  left_join(isolate_table, .) #%>%
mapping_table %>% arrange(desc(Mapping_rate), desc(input_reads))
mapping_table %>% arrange(desc(Mapping_rate), desc(input_reads)) %>% tail(.)
qualimap_files <- list.files("data", "multisampleBamQcReport.html", full.names = TRUE,
recursive = TRUE)
exclude_columns <- c("Coverage std", "Insert size median")
qualimap_results <-  qualimap_files %>% map_df(~htmltab(., which = "//td/b[text() = 'Sample name']/ancestor::table")) %>%
rename(Sample_id=`Sample name`, Coverage=`Coverage mean`) %>%
dplyr::select(-one_of(exclude_columns)) %>%
mutate_at(.vars = vars(-starts_with("Sample")), .funs = as.numeric)
qualimap_results
qualimap_files %>% map_df(~htmltab(., which = "//td/b[text() = 'Sample name']/ancestor::table")) %>%
rename(Sample_ID=`Sample name`, Coverage=`Coverage mean`) %>%
dplyr::select(-one_of(exclude_columns)) %>%
mutate_at(.vars = vars(-starts_with("Sample")), .funs = as.numeric) %>%
left_join(., mapping_table)
mapping_table <- list.files("data", ".stats", full.names = TRUE) %>% map_df(read_tsv) %>%
rename(Sample_ID=sample_id) %>%
mutate(Sample_ID=as.character(Sample_ID)) %>%
# mutate_at(vars(contains("mapp")),  ~as.numeric(sub("%", "", ., fixed=TRUE))/100) %>%
mutate(Mapping_rate=as.numeric(sub("%", "", mapping_rate, fixed=TRUE))/100,
Mapping_tool = "Bowtie2 (v2.3.5)") %>%
#        Sample_id=str_extract(.$sample_id, paste(sequencing_table$Submission_id, collapse = "|"))) %>%
# group_by(Sample_id, Mapping_tool) %>%
# summarise(Mapping_rate=mean(Mapping_rate)) %>% ungroup() %>%
arrange(Sample_ID) %>%  left_join(isolate_table, .) #%>%
qualimap_files %>% map_df(~htmltab(., which = "//td/b[text() = 'Sample name']/ancestor::table")) %>%
rename(Sample_ID=`Sample name`, Coverage=`Coverage mean`) %>%
mutate(Sample_ID=as.numeric(Sample_ID)) %>%
dplyr::select(-one_of(exclude_columns)) %>%
mutate_at(.vars = vars(-starts_with("Sample")), .funs = as.numeric) %>%
left_join(., mapping_table)
qualimap_files %>% map_df(~htmltab(., which = "//td/b[text() = 'Sample name']/ancestor::table")) %>%
rename(Sample_name=`Sample name`, Coverage=`Coverage mean`) %>%
# mutate(Sample_ID=as.numeric(Sample_ID)) %>%
dplyr::select(-one_of(exclude_columns)) %>%
mutate_at(.vars = vars(-starts_with("Sample")), .funs = as.numeric) %>%
left_join(., mapping_table)
qualimap_files %>% map_df(~htmltab(., which = "//td/b[text() = 'Sample name']/ancestor::table")) %>%
rename(Sample_name=`Sample name`, Coverage=`Coverage mean`) %>%
# mutate(Sample_ID=as.numeric(Sample_ID)) %>%
dplyr::select(-one_of(exclude_columns)) %>%
mutate_at(.vars = vars(-starts_with("Sample")), .funs = as.numeric) %>%
left_join(., mapping_table) %>%
arrange(Isolate, desc(Coverage)) %>% set_names(., gsub(" ", "_", colnames(.))) %>%
dplyr::select(Isolate=Sample_name, GC_percentage, Mapping_quality_mean, Mapping_rate, Coverage, Mapping_tool, Sample_id, Species)
qualimap_files %>% map_df(~htmltab(., which = "//td/b[text() = 'Sample name']/ancestor::table")) %>%
rename(Sample_name=`Sample name`, Coverage=`Coverage mean`) %>%
# mutate(Sample_ID=as.numeric(Sample_ID)) %>%
dplyr::select(-one_of(exclude_columns)) %>%
mutate_at(.vars = vars(-starts_with("Sample")), .funs = as.numeric) %>%
left_join(., mapping_table) %>%
arrange(Sample_name, desc(Coverage)) %>% set_names(., gsub(" ", "_", colnames(.))) %>%
dplyr::select(Isolate=Sample_name, GC_percentage, Mapping_quality_mean, Mapping_rate, Coverage, Mapping_tool, Sample_id, Species)
qualimap_files %>% map_df(~htmltab(., which = "//td/b[text() = 'Sample name']/ancestor::table")) %>%
rename(Sample_name=`Sample name`, Coverage=`Coverage mean`) %>%
# mutate(Sample_ID=as.numeric(Sample_ID)) %>%
dplyr::select(-one_of(exclude_columns)) %>%
mutate_at(.vars = vars(-starts_with("Sample")), .funs = as.numeric) %>%
left_join(., mapping_table) %>%
arrange(Sample_name, desc(Coverage)) %>% set_names(., gsub(" ", "_", colnames(.))) %>%
dplyr::select(Sample_ID,Isolate=Sample_name, GC_percentage, Mapping_quality_mean, Mapping_rate, Coverage, Mapping_tool,  Species)
# mutate(`Pathog. Group`=samples_table$Pathogenicity[match(samples_table$Isolate, .$Isolate)] )
qualimap_results <-  qualimap_files %>% map_df(~htmltab(., which = "//td/b[text() = 'Sample name']/ancestor::table")) %>%
rename(Sample_name=`Sample name`, Coverage=`Coverage mean`) %>%
# mutate(Sample_ID=as.numeric(Sample_ID)) %>%
dplyr::select(-one_of(exclude_columns)) %>%
mutate_at(.vars = vars(-starts_with("Sample")), .funs = as.numeric) %>%
left_join(., mapping_table) %>%
arrange(Sample_ID) %>% set_names(., gsub(" ", "_", colnames(.))) %>%
dplyr::select(Sample_ID,Isolate=Sample_name, GC_percentage, Mapping_quality_mean, Mapping_rate, Coverage, Mapping_tool,  Species) %>%
write_csv(filedate(glue::glue("Botrytis_WGS_AGRF.mapping.stats"), ".txt", "./output/results", dateformat = FALSE))
datatable(as.data.frame(qualimap_results %>% mutate_if(is.numeric, ~round(., 2))), caption=tbls("mapping_rates")) %>% #,
# options = list(dom = 'tf', pageLength = 40)) %>%
formatStyle("Coverage", target = "row",
backgroundColor = styleInterval(c(10,20), c('#ef3125', '#feed95', NA))
)
